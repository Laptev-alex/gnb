#Виктор Викторович Кожухаров, [17.11.2024 9:40]
############the_begining#####################
max_powers = [
    {40: [[2.5, 3.2], [2.5, 3.2], [3.3, 4.2], [4.2, 5.3]]},
    {50: [[3.3, 4.2], [4.2, 5.3], [5.8, 7.4], [6.7, 8.4]]},
    {63: [[5.8, 7.4], [7.5, 9.5], [8.4, 10.5], [10.9, 13.7]]},
    {90: [[11.7, 14.7], [15.0, 18.9], [17.5, 22.1], [20.9, 26.3]]},
    {110: [[18.4, 23.1], [21.7, 27.3], [26.7, 33.6], [31.7, 39.9]]},
    {125: [[22.5, 28.4], [28.4, 35.7], [34.2, 43.1], [40.9, 51.5]]},
    {140: [[28.4, 35.7], [35.1, 44.1], [42.6, 53.6], [50.9, 64.1]]},
    {160: [[37.6, 47.3], [45.9, 57.8], [55.9, 70.4], [66.8, 84.0]]},
    {180: [[47.6, 59.9], [58.5, 73.5], [70.1, 88.2], [91.0, 114.5]]},
    {200: [[58.5, 73.5], [71.8, 90.3], [86.8, 109.2], [104.4, 131.3]]},
    {225: [[74.3, 93.5], [91.0, 114.5], [110.2, 138.6], [131.9, 165.9]]},
    {250: [[91.0, 114.5], [111.9, 140.7], [135.3, 170.1], [162.8, 204.8]]},
    {280: [[114.4, 143.9], [140.3, 176.4], [169.5, 213.2], [204.6, 257.3]]},
    {315: [[145.3, 182.7], [177.9, 223.7], [214.6, 269.9], [258.9, 325.5]]},
    {355: [[184.5, 232.1], [225.5, 283.5], [272.2, 342.3], [328.2, 412.7]]},
    {400: [[233.8, 294.0], [285.6, 359.1], [346.5, 435.8], [416.7, 524.0]]},
    {450: [[296.4, 372.8], [361.6, 454.7], [438.4, 551.3], [526.9, 662.6]]},
    {500: [[416.1, 446.0], [446.7, 561.8], [541.1, 680.4], [649.6, 816.9]]}
]

# Input параметров
max_diametr = int(input('Введите наружный диаметр трубы: '))
sdr = float(input('Введите величину SDR из технической документации: \n Подсказка (9 -11-13,6-17) Другие значения ошибка:'))
density = int(input('Введите величину экструзионной плотности материала (80 или 100 ПЭ): '))

def limit_power(max_powers):
    sdr_list = [17, 13.6, 11, 9]  # Список доступных SDR
    y = 0  #  y as 0
    for max_power in max_powers:
        if max_diametr in max_power:
            # проверяем if если SDR есть в заданном списке см выше
            if sdr in sdr_list:
                sdr_index = sdr_list.index(sdr)  # получаем  index  SDR
                if density == 80:
                    y = max_power[max_diametr][sdr_index][0]  # используем 80
                elif density == 100:
                    y = max_power[max_diametr][sdr_index][1]  # используем 100
            else:
                print(f"Ошибка: SDR {sdr} не найден в списке допустимых значений.")
                return None  # ошибку if SDR не найден
    if y == 0:
        print(f"Ошибка: диаметр трубы {max_diametr} не найден.")
        return None  # возвращаем ошибку if max_diametr не найден
    return y

# вызываем function и печатаем резалт
y = limit_power(max_powers)

if y:
    print(f"Максимальное усилие протягивания: {y} кН так указано в таблице Ж.1 СП 341")
else:
    print("Ошибка: не удалось вычислить усилие протягивания.")
########################################2part###########################
######## START
k = [1, 2, 2.15, 2.4, 3, 3, 3, 3.3, 3.83]  # coefficients for the pipe package
kburk = [1.2, 1.3, 1.4, 1.5]

n = int(input('Введите количество труб: '))
#Dt = float(input('Введите диаметр трубы (мм): '))
Dt = max_diametr
if n > len(k):
    print("Ошибка: количество труб превышает допустимое значение.")
    exit()

Dn = Dt * k[n - 1]  # Diameter  пакета труб
print(f'Диаметр вашего пакета труб составляет - {Dn:.2f} мм')

lgnb = int(input('Введите длину ГНБ (м): '))
#t_stenki = float(input('Введите толщину стенки трубы (мм): '))

# Определяем flag на основании длины ГНБ
if lgnb < 50:
    flag = 1
elif 50 <= lgnb <= 99:
    flag = 2
elif 100 <= lgnb <= 299:
    flag = 3
else:
    flag = 4

#print(f'Флаг длины ГНБ: {flag} 1 менее 50,2 менее 100')

# Calculate the diameter бур.канала на основании  diameter пакета
if Dn <= 200:
    if flag == 1:
        d_bur_kanal = 1.2 * Dn
    elif flag == 2:
        d_bur_kanal = 1.3 * Dn
    elif flag == 3:
        d_bur_kanal = 1.4 * Dn
    else:
        d_bur_kanal = Dn + 100
elif 201 <= Dn <= 599:
    if flag == 2:
        d_bur_kanal = 1.3 * Dn
    elif flag == 3:
        d_bur_kanal = 1.4 * Dn
    else:
        d_bur_kanal = 1.5 * Dn
elif Dn >= 600 :
    d_bur_kanal = Dn + 300
print(f'Диаметр бурового канала составляет - {d_bur_kanal:.2f} мм')
################ конец расчёта бур канала #####3#
# определяем буровое усилие как словарь хэш ассооциаций Таблица А.3
pulling_force_table = {
    (0, 50):    [50, 70, 70, 100, 120, 200, 360],
    (50, 100):  [70, 70, 100, 120, 200, 360, 400],
    (100, 150): [70, 100, 120, 120, 200, 400, 500],
    (150, 250): [100, 120, 200, 200, 360, 400, 500],
    (250, 400): [200, 200, 200, 360, 400, 500, 600],
    (400, 600): [300, 300, 360, 360, 500, 500, 600],
    (600, 800): [360, 400, 450, 500, 600, 700, 1000],
    (800, 1000): [500, 500, 500, 600, 700, 1000, 1200],
    (1000, 1200): [800, 800, 800, 1000, 1200, 1500, 2000],
    (1200, 1400): [1200, 1200, 1200, 1500, 1500, 2000, 2500],
    (1400, float('inf')): [1000, 1200, 1500, 2000, 2500, 2500, 3000]
}

# Определяем ранжир по колонкам table А.3
diameter_ranges = [100, 250, 350, 450, 650, 850, float('inf')]

# Определяем the correct строку основываясь on lgnb опять из а.3
for length_range, forces in pulling_force_table.items():
    if length_range[0] <= lgnb <= length_range[1]:
        applicable_forces = forces
        break
else:
    applicable_forces = pulling_force_table[(1400, float('inf'))]  # for lgnb > 1400

# Determine the correct column based on d_bur_kanal
for i, d_range in enumerate(diameter_ranges):
    if d_bur_kanal <= d_range:
        required_force = applicable_forces[i]
        break

print(f'Необходимое минимальное значение силы тяги буровой установки: {required_force} кН')

########## the end of расчёт тягла #######3
# Input параметрa для категории грунтов
# Input параметрa для категории грунтов
grunt = int(input('Введите категорию грунта (не более 7): '))

# Определяем коэффициент грунта (k1)
if grunt <= 3:
    k1 = 1.5
elif 3 < grunt <= 6:
    k1 = 2.0
else:
    k1 = 2.5

# Определяем коэффициент запаса (ftu) - всегда должен быть не менее 1.0
ftu = 1.0  # Initial safety factor

# Корректируем усилие с учётом категории грунта
adjusted_required_force = required_force * k1

# Проверяем, не превышает ли расчетная сила тяги максимальное усилие протягивания трубы
if adjusted_required_force > y:
    # Если усилие больше, чем допускает труба, ограничиваем значение
    print(f"Предупреждение: Требуемое усилие ({adjusted_required_force:.2f} кН) превышает максимальное допустимое ({y:.2f} кН1).")
    final_pulling_force = y
else:
    final_pulling_force = adjusted_required_force

# Вывод окончательного значения силы тяги с учетом запаса
print(f'Необходимое значение силы тяги с учетом грунта и запаса: {final_pulling_force:.2f} кН')
print(f'Значение для выбора буровой установки: {adjusted_required_force:.2f} kH')
